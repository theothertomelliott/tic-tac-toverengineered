/**
 * Tic Tac Toe
 * An API for games of Tic Tac Toe
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: tom.w.elliott@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Error from './model/Error';
import Grid from './model/Grid';
import GridAllOf from './model/GridAllOf';
import Match from './model/Match';
import MatchAllOf from './model/MatchAllOf';
import MatchPair from './model/MatchPair';
import MatchPairAllOf from './model/MatchPairAllOf';
import MatchPending from './model/MatchPending';
import MatchPendingAllOf from './model/MatchPendingAllOf';
import Winner from './model/Winner';
import WinnerAllOf from './model/WinnerAllOf';
import DefaultApi from './api/DefaultApi';


/**
* An_API_for_games_of_Tic_Tac_Toe.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var TicTacToe = require('index'); // See note below*.
* var xxxSvc = new TicTacToe.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new TicTacToe.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new TicTacToe.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new TicTacToe.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error,

    /**
     * The Grid model constructor.
     * @property {module:model/Grid}
     */
    Grid,

    /**
     * The GridAllOf model constructor.
     * @property {module:model/GridAllOf}
     */
    GridAllOf,

    /**
     * The Match model constructor.
     * @property {module:model/Match}
     */
    Match,

    /**
     * The MatchAllOf model constructor.
     * @property {module:model/MatchAllOf}
     */
    MatchAllOf,

    /**
     * The MatchPair model constructor.
     * @property {module:model/MatchPair}
     */
    MatchPair,

    /**
     * The MatchPairAllOf model constructor.
     * @property {module:model/MatchPairAllOf}
     */
    MatchPairAllOf,

    /**
     * The MatchPending model constructor.
     * @property {module:model/MatchPending}
     */
    MatchPending,

    /**
     * The MatchPendingAllOf model constructor.
     * @property {module:model/MatchPendingAllOf}
     */
    MatchPendingAllOf,

    /**
     * The Winner model constructor.
     * @property {module:model/Winner}
     */
    Winner,

    /**
     * The WinnerAllOf model constructor.
     * @property {module:model/WinnerAllOf}
     */
    WinnerAllOf,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
