/**
 * Tic Tac Toe
 * An API for games of Tic Tac Toe
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: tom.w.elliott@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MatchAllOf from './MatchAllOf';

/**
 * The Match model module.
 * @module model/Match
 * @version 1.0.0
 */
class Match {
    /**
     * Constructs a new <code>Match</code>.
     * @alias module:model/Match
     * @implements module:model/MatchAllOf
     * @param gameID {String} 
     * @param mark {String} 
     * @param token {String} 
     */
    constructor(gameID, mark, token) { 
        MatchAllOf.initialize(this, gameID, mark, token);
        Match.initialize(this, gameID, mark, token);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, gameID, mark, token) { 
        obj['gameID'] = gameID;
        obj['mark'] = mark;
        obj['token'] = token;
    }

    /**
     * Constructs a <code>Match</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Match} obj Optional instance to populate.
     * @return {module:model/Match} The populated <code>Match</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Match();
            MatchAllOf.constructFromObject(data, obj);

            if (data.hasOwnProperty('gameID')) {
                obj['gameID'] = ApiClient.convertToType(data['gameID'], 'String');
            }
            if (data.hasOwnProperty('mark')) {
                obj['mark'] = ApiClient.convertToType(data['mark'], 'String');
            }
            if (data.hasOwnProperty('token')) {
                obj['token'] = ApiClient.convertToType(data['token'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} gameID
 */
Match.prototype['gameID'] = undefined;

/**
 * @member {String} mark
 */
Match.prototype['mark'] = undefined;

/**
 * @member {String} token
 */
Match.prototype['token'] = undefined;


// Implement MatchAllOf interface:
/**
 * @member {String} gameID
 */
MatchAllOf.prototype['gameID'] = undefined;
/**
 * @member {String} mark
 */
MatchAllOf.prototype['mark'] = undefined;
/**
 * @member {String} token
 */
MatchAllOf.prototype['token'] = undefined;




export default Match;

