// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.2
// source: grid.proto

package rpcgrid

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Position struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X int32 `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y int32 `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *Position) Reset() {
	*x = Position{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grid_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Position) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Position) ProtoMessage() {}

func (x *Position) ProtoReflect() protoreflect.Message {
	mi := &file_grid_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Position.ProtoReflect.Descriptor instead.
func (*Position) Descriptor() ([]byte, []int) {
	return file_grid_proto_rawDescGZIP(), []int{0}
}

func (x *Position) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Position) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

type MarkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId   string    `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	Position *Position `protobuf:"bytes,2,opt,name=position,proto3" json:"position,omitempty"`
}

func (x *MarkRequest) Reset() {
	*x = MarkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grid_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkRequest) ProtoMessage() {}

func (x *MarkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grid_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkRequest.ProtoReflect.Descriptor instead.
func (*MarkRequest) Descriptor() ([]byte, []int) {
	return file_grid_proto_rawDescGZIP(), []int{1}
}

func (x *MarkRequest) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *MarkRequest) GetPosition() *Position {
	if x != nil {
		return x.Position
	}
	return nil
}

type MarkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mark    string `protobuf:"bytes,1,opt,name=mark,proto3" json:"mark,omitempty"`
	HasMark bool   `protobuf:"varint,2,opt,name=has_mark,json=hasMark,proto3" json:"has_mark,omitempty"`
}

func (x *MarkResponse) Reset() {
	*x = MarkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grid_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkResponse) ProtoMessage() {}

func (x *MarkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grid_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkResponse.ProtoReflect.Descriptor instead.
func (*MarkResponse) Descriptor() ([]byte, []int) {
	return file_grid_proto_rawDescGZIP(), []int{2}
}

func (x *MarkResponse) GetMark() string {
	if x != nil {
		return x.Mark
	}
	return ""
}

func (x *MarkResponse) GetHasMark() bool {
	if x != nil {
		return x.HasMark
	}
	return false
}

type SetMarkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId   string    `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	Position *Position `protobuf:"bytes,2,opt,name=position,proto3" json:"position,omitempty"`
	Mark     string    `protobuf:"bytes,3,opt,name=mark,proto3" json:"mark,omitempty"`
}

func (x *SetMarkRequest) Reset() {
	*x = SetMarkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grid_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMarkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMarkRequest) ProtoMessage() {}

func (x *SetMarkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grid_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMarkRequest.ProtoReflect.Descriptor instead.
func (*SetMarkRequest) Descriptor() ([]byte, []int) {
	return file_grid_proto_rawDescGZIP(), []int{3}
}

func (x *SetMarkRequest) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *SetMarkRequest) GetPosition() *Position {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *SetMarkRequest) GetMark() string {
	if x != nil {
		return x.Mark
	}
	return ""
}

type SetMarkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetMarkResponse) Reset() {
	*x = SetMarkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grid_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMarkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMarkResponse) ProtoMessage() {}

func (x *SetMarkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grid_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMarkResponse.ProtoReflect.Descriptor instead.
func (*SetMarkResponse) Descriptor() ([]byte, []int) {
	return file_grid_proto_rawDescGZIP(), []int{4}
}

type Row struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position []*Position `protobuf:"bytes,1,rep,name=position,proto3" json:"position,omitempty"`
}

func (x *Row) Reset() {
	*x = Row{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grid_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Row) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Row) ProtoMessage() {}

func (x *Row) ProtoReflect() protoreflect.Message {
	mi := &file_grid_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Row.ProtoReflect.Descriptor instead.
func (*Row) Descriptor() ([]byte, []int) {
	return file_grid_proto_rawDescGZIP(), []int{5}
}

func (x *Row) GetPosition() []*Position {
	if x != nil {
		return x.Position
	}
	return nil
}

type RowsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RowsRequest) Reset() {
	*x = RowsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grid_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RowsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RowsRequest) ProtoMessage() {}

func (x *RowsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grid_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RowsRequest.ProtoReflect.Descriptor instead.
func (*RowsRequest) Descriptor() ([]byte, []int) {
	return file_grid_proto_rawDescGZIP(), []int{6}
}

type RowsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Row []*Row `protobuf:"bytes,1,rep,name=row,proto3" json:"row,omitempty"`
}

func (x *RowsResponse) Reset() {
	*x = RowsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grid_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RowsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RowsResponse) ProtoMessage() {}

func (x *RowsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grid_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RowsResponse.ProtoReflect.Descriptor instead.
func (*RowsResponse) Descriptor() ([]byte, []int) {
	return file_grid_proto_rawDescGZIP(), []int{7}
}

func (x *RowsResponse) GetRow() []*Row {
	if x != nil {
		return x.Row
	}
	return nil
}

var File_grid_proto protoreflect.FileDescriptor

var file_grid_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x67, 0x72, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x26, 0x0a, 0x08,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x01, 0x79, 0x22, 0x4d, 0x0a, 0x0b, 0x4d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x08,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x3d, 0x0a, 0x0c, 0x4d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d,
	0x61, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x61,
	0x72, 0x6b, 0x22, 0x64, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a,
	0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x11, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x4d,
	0x61, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2c, 0x0a, 0x03, 0x52,
	0x6f, 0x77, 0x12, 0x25, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x0d, 0x0a, 0x0b, 0x52, 0x6f, 0x77,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x26, 0x0a, 0x0c, 0x52, 0x6f, 0x77, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x03, 0x72, 0x6f, 0x77, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x04, 0x2e, 0x52, 0x6f, 0x77, 0x52, 0x03, 0x72, 0x6f, 0x77,
	0x32, 0x84, 0x01, 0x0a, 0x04, 0x47, 0x72, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x04, 0x4d, 0x61, 0x72,
	0x6b, 0x12, 0x0c, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x0d, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x2e, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x12, 0x0f, 0x2e, 0x53, 0x65,
	0x74, 0x4d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x53,
	0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x25, 0x0a, 0x04, 0x52, 0x6f, 0x77, 0x73, 0x12, 0x0c, 0x2e, 0x52, 0x6f, 0x77, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x52, 0x6f, 0x77, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x4d, 0x5a, 0x4b, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x68, 0x65, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x74, 0x6f,
	0x6d, 0x65, 0x6c, 0x6c, 0x69, 0x6f, 0x74, 0x74, 0x2f, 0x74, 0x69, 0x63, 0x2d, 0x74, 0x61, 0x63,
	0x2d, 0x74, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x65, 0x72, 0x65, 0x64,
	0x2f, 0x67, 0x72, 0x69, 0x64, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x72, 0x69, 0x64, 0x2f, 0x72,
	0x70, 0x63, 0x67, 0x72, 0x69, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_grid_proto_rawDescOnce sync.Once
	file_grid_proto_rawDescData = file_grid_proto_rawDesc
)

func file_grid_proto_rawDescGZIP() []byte {
	file_grid_proto_rawDescOnce.Do(func() {
		file_grid_proto_rawDescData = protoimpl.X.CompressGZIP(file_grid_proto_rawDescData)
	})
	return file_grid_proto_rawDescData
}

var file_grid_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_grid_proto_goTypes = []interface{}{
	(*Position)(nil),        // 0: Position
	(*MarkRequest)(nil),     // 1: MarkRequest
	(*MarkResponse)(nil),    // 2: MarkResponse
	(*SetMarkRequest)(nil),  // 3: SetMarkRequest
	(*SetMarkResponse)(nil), // 4: SetMarkResponse
	(*Row)(nil),             // 5: Row
	(*RowsRequest)(nil),     // 6: RowsRequest
	(*RowsResponse)(nil),    // 7: RowsResponse
}
var file_grid_proto_depIdxs = []int32{
	0, // 0: MarkRequest.position:type_name -> Position
	0, // 1: SetMarkRequest.position:type_name -> Position
	0, // 2: Row.position:type_name -> Position
	5, // 3: RowsResponse.row:type_name -> Row
	1, // 4: Grid.Mark:input_type -> MarkRequest
	3, // 5: Grid.SetMark:input_type -> SetMarkRequest
	6, // 6: Grid.Rows:input_type -> RowsRequest
	2, // 7: Grid.Mark:output_type -> MarkResponse
	4, // 8: Grid.SetMark:output_type -> SetMarkResponse
	7, // 9: Grid.Rows:output_type -> RowsResponse
	7, // [7:10] is the sub-list for method output_type
	4, // [4:7] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_grid_proto_init() }
func file_grid_proto_init() {
	if File_grid_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_grid_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Position); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grid_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grid_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grid_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetMarkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grid_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetMarkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grid_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Row); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grid_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RowsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grid_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RowsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grid_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grid_proto_goTypes,
		DependencyIndexes: file_grid_proto_depIdxs,
		MessageInfos:      file_grid_proto_msgTypes,
	}.Build()
	File_grid_proto = out.File
	file_grid_proto_rawDesc = nil
	file_grid_proto_goTypes = nil
	file_grid_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GridClient is the client API for Grid service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GridClient interface {
	Mark(ctx context.Context, in *MarkRequest, opts ...grpc.CallOption) (*MarkResponse, error)
	SetMark(ctx context.Context, in *SetMarkRequest, opts ...grpc.CallOption) (*SetMarkResponse, error)
	Rows(ctx context.Context, in *RowsRequest, opts ...grpc.CallOption) (*RowsResponse, error)
}

type gridClient struct {
	cc grpc.ClientConnInterface
}

func NewGridClient(cc grpc.ClientConnInterface) GridClient {
	return &gridClient{cc}
}

func (c *gridClient) Mark(ctx context.Context, in *MarkRequest, opts ...grpc.CallOption) (*MarkResponse, error) {
	out := new(MarkResponse)
	err := c.cc.Invoke(ctx, "/Grid/Mark", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gridClient) SetMark(ctx context.Context, in *SetMarkRequest, opts ...grpc.CallOption) (*SetMarkResponse, error) {
	out := new(SetMarkResponse)
	err := c.cc.Invoke(ctx, "/Grid/SetMark", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gridClient) Rows(ctx context.Context, in *RowsRequest, opts ...grpc.CallOption) (*RowsResponse, error) {
	out := new(RowsResponse)
	err := c.cc.Invoke(ctx, "/Grid/Rows", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GridServer is the server API for Grid service.
type GridServer interface {
	Mark(context.Context, *MarkRequest) (*MarkResponse, error)
	SetMark(context.Context, *SetMarkRequest) (*SetMarkResponse, error)
	Rows(context.Context, *RowsRequest) (*RowsResponse, error)
}

// UnimplementedGridServer can be embedded to have forward compatible implementations.
type UnimplementedGridServer struct {
}

func (*UnimplementedGridServer) Mark(context.Context, *MarkRequest) (*MarkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Mark not implemented")
}
func (*UnimplementedGridServer) SetMark(context.Context, *SetMarkRequest) (*SetMarkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetMark not implemented")
}
func (*UnimplementedGridServer) Rows(context.Context, *RowsRequest) (*RowsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Rows not implemented")
}

func RegisterGridServer(s *grpc.Server, srv GridServer) {
	s.RegisterService(&_Grid_serviceDesc, srv)
}

func _Grid_Mark_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MarkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GridServer).Mark(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Grid/Mark",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GridServer).Mark(ctx, req.(*MarkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Grid_SetMark_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetMarkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GridServer).SetMark(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Grid/SetMark",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GridServer).SetMark(ctx, req.(*SetMarkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Grid_Rows_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RowsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GridServer).Rows(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Grid/Rows",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GridServer).Rows(ctx, req.(*RowsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Grid_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Grid",
	HandlerType: (*GridServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Mark",
			Handler:    _Grid_Mark_Handler,
		},
		{
			MethodName: "SetMark",
			Handler:    _Grid_SetMark_Handler,
		},
		{
			MethodName: "Rows",
			Handler:    _Grid_Rows_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grid.proto",
}
